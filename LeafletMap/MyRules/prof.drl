package eu.trentorise.game.model
import java.util.Map
import java.util.ArrayList

declare AlreadyLevelUp
end


rule "first-answer"
when
  Action(id == 'PinAnswerCompleted')
  InputData(
    $solution: data["solution"]
  )
  $GoldCoinsScore : PointConcept(name == "GoldCoins")
  $PointsScore : PointConcept(name == "AccumulatedPoints")
  $customData : CustomData(this["level"] == null) 
  not AlreadyLevelUp()
then
  Map solutionMap = ((Map)$solution);
  String  punti = (String)solutionMap.get("points"); 

  Double puntiDouble = Double.parseDouble(punti);
  // update the counter
  modify($GoldCoinsScore){setScore($GoldCoinsScore.getScore() + puntiDouble);}
  modify($PointsScore) {setScore($PointsScore.getScore() + puntiDouble);} 
  
  $customData.put("level_up_points", punti);
  $customData.put("level", "1");

  update($customData)
  insert(new AlreadyLevelUp());
end


//ALL THE OTHER LEVELS
rule "answer-x"
when
	Action( id == 'PinAnswerCompleted')
  	InputData(
        $solution : data["solution"]
 )
 $GoldCoinsScore : PointConcept(name == "GoldCoins")
 $PointsScore : PointConcept(name == "AccumulatedPoints")
 $customData : CustomData(this["level"] >= 0) 
 not AlreadyLevelUp()
then 

  Map solutionMap = ((Map)$solution);
  String myPoints = (String)solutionMap.get("points"); 
  Double punti = Double.parseDouble(myPoints); 


 // update the counter
  modify($GoldCoinsScore){setScore($GoldCoinsScore.getScore() + punti);}
  modify($PointsScore) {setScore($PointsScore.getScore() + punti);}  
  
 String actualPoints = (String)$customData.get("level_up_points");
 Double levelPoints = Double.parseDouble(actualPoints); 

 levelPoints = levelPoints + punti;

 String newLevelPoints = String.valueOf(levelPoints);
 $customData.put("level_up_points", newLevelPoints);

  update($customData)
  insert(new AlreadyLevelUp());

end